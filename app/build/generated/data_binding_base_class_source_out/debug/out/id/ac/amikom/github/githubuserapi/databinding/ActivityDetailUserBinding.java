// Generated by view binder compiler. Do not edit!
package id.ac.amikom.github.githubuserapi.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewpager.widget.ViewPager;
import com.google.android.material.tabs.TabLayout;
import id.ac.amikom.github.githubuserapi.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDetailUserBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView ivProfile;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final TabLayout tabs;

  @NonNull
  public final TextView tvFollowers;

  @NonNull
  public final TextView tvFollowing;

  @NonNull
  public final TextView tvName;

  @NonNull
  public final TextView tvUsername;

  @NonNull
  public final ViewPager viewPager;

  private ActivityDetailUserBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView ivProfile, @NonNull LinearLayout linearLayout, @NonNull TabLayout tabs,
      @NonNull TextView tvFollowers, @NonNull TextView tvFollowing, @NonNull TextView tvName,
      @NonNull TextView tvUsername, @NonNull ViewPager viewPager) {
    this.rootView = rootView;
    this.ivProfile = ivProfile;
    this.linearLayout = linearLayout;
    this.tabs = tabs;
    this.tvFollowers = tvFollowers;
    this.tvFollowing = tvFollowing;
    this.tvName = tvName;
    this.tvUsername = tvUsername;
    this.viewPager = viewPager;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDetailUserBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDetailUserBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_detail_user, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDetailUserBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.iv_profile;
      ImageView ivProfile = rootView.findViewById(id);
      if (ivProfile == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = rootView.findViewById(id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.tabs;
      TabLayout tabs = rootView.findViewById(id);
      if (tabs == null) {
        break missingId;
      }

      id = R.id.tv_followers;
      TextView tvFollowers = rootView.findViewById(id);
      if (tvFollowers == null) {
        break missingId;
      }

      id = R.id.tv_following;
      TextView tvFollowing = rootView.findViewById(id);
      if (tvFollowing == null) {
        break missingId;
      }

      id = R.id.tv_name;
      TextView tvName = rootView.findViewById(id);
      if (tvName == null) {
        break missingId;
      }

      id = R.id.tv_username;
      TextView tvUsername = rootView.findViewById(id);
      if (tvUsername == null) {
        break missingId;
      }

      id = R.id.view_pager;
      ViewPager viewPager = rootView.findViewById(id);
      if (viewPager == null) {
        break missingId;
      }

      return new ActivityDetailUserBinding((ConstraintLayout) rootView, ivProfile, linearLayout,
          tabs, tvFollowers, tvFollowing, tvName, tvUsername, viewPager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
